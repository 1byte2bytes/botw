#pragma once

// DO NOT EDIT. This file is automatically generated by actInfoCommon.py.

namespace al {
class ByamlIter;
}

namespace ksys::act {

class InfoData;

bool getSystemIsGetItemSelf(InfoData* data, const char* actor);
bool getSystemIsGetItemSelf(const al::ByamlIter& iter);

int getGeneralLife(InfoData* data, const char* actor);
int getGeneralLife(const al::ByamlIter& iter);

int getEnemyRank(InfoData* data, const char* actor);
int getEnemyRank(const al::ByamlIter& iter);

int getAttackPower(InfoData* data, const char* actor);
int getAttackPower(const al::ByamlIter& iter);

int getWeaponCommonGuardPower(InfoData* data, const char* actor);
int getWeaponCommonGuardPower(const al::ByamlIter& iter);

float getWeaponCommonSharpWeaponPer(InfoData* data, const char* actor);
float getWeaponCommonSharpWeaponPer(const al::ByamlIter& iter);

int getWeaponCommonSharpWeaponAddAtkMin(InfoData* data, const char* actor);
int getWeaponCommonSharpWeaponAddAtkMin(const al::ByamlIter& iter);

int getWeaponCommonSharpWeaponAddAtkMax(InfoData* data, const char* actor);
int getWeaponCommonSharpWeaponAddAtkMax(const al::ByamlIter& iter);

int getWeaponCommonSharpWeaponAddLifeMin(InfoData* data, const char* actor);
int getWeaponCommonSharpWeaponAddLifeMin(const al::ByamlIter& iter);

int getWeaponCommonSharpWeaponAddLifeMax(InfoData* data, const char* actor);
int getWeaponCommonSharpWeaponAddLifeMax(const al::ByamlIter& iter);

bool getWeaponCommonSharpWeaponAddCrit(InfoData* data, const char* actor);
bool getWeaponCommonSharpWeaponAddCrit(const al::ByamlIter& iter);

int getWeaponCommonSharpWeaponAddGuardMin(InfoData* data, const char* actor);
int getWeaponCommonSharpWeaponAddGuardMin(const al::ByamlIter& iter);

int getWeaponCommonSharpWeaponAddGuardMax(InfoData* data, const char* actor);
int getWeaponCommonSharpWeaponAddGuardMax(const al::ByamlIter& iter);

int getWeaponCommonPoweredSharpAddAtkMin(InfoData* data, const char* actor);
int getWeaponCommonPoweredSharpAddAtkMin(const al::ByamlIter& iter);

int getWeaponCommonPoweredSharpAddAtkMax(InfoData* data, const char* actor);
int getWeaponCommonPoweredSharpAddAtkMax(const al::ByamlIter& iter);

int getWeaponCommonPoweredSharpAddLifeMin(InfoData* data, const char* actor);
int getWeaponCommonPoweredSharpAddLifeMin(const al::ByamlIter& iter);

int getWeaponCommonPoweredSharpAddLifeMax(InfoData* data, const char* actor);
int getWeaponCommonPoweredSharpAddLifeMax(const al::ByamlIter& iter);

int getWeaponCommonPoweredSharpWeaponAddGuardMin(InfoData* data, const char* actor);
int getWeaponCommonPoweredSharpWeaponAddGuardMin(const al::ByamlIter& iter);

int getWeaponCommonPoweredSharpWeaponAddGuardMax(InfoData* data, const char* actor);
int getWeaponCommonPoweredSharpWeaponAddGuardMax(const al::ByamlIter& iter);

float getWeaponCommonPoweredSharpAddThrowMin(InfoData* data, const char* actor);
float getWeaponCommonPoweredSharpAddThrowMin(const al::ByamlIter& iter);

float getWeaponCommonPoweredSharpAddThrowMax(InfoData* data, const char* actor);
float getWeaponCommonPoweredSharpAddThrowMax(const al::ByamlIter& iter);

bool getWeaponCommonPoweredSharpAddSpreadFire(InfoData* data, const char* actor);
bool getWeaponCommonPoweredSharpAddSpreadFire(const al::ByamlIter& iter);

bool getWeaponCommonPoweredSharpAddZoomRapid(InfoData* data, const char* actor);
bool getWeaponCommonPoweredSharpAddZoomRapid(const al::ByamlIter& iter);

float getWeaponCommonPoweredSharpAddRapidFireMin(InfoData* data, const char* actor);
float getWeaponCommonPoweredSharpAddRapidFireMin(const al::ByamlIter& iter);

float getWeaponCommonPoweredSharpAddRapidFireMax(InfoData* data, const char* actor);
float getWeaponCommonPoweredSharpAddRapidFireMax(const al::ByamlIter& iter);

bool getWeaponCommonPoweredSharpAddSurfMaster(InfoData* data, const char* actor);
bool getWeaponCommonPoweredSharpAddSurfMaster(const al::ByamlIter& iter);

const char* getBowArrowName(InfoData* data, const char* actor);
const char* getBowArrowName(const al::ByamlIter& iter);

bool getBowIsLeadShot(InfoData* data, const char* actor);
bool getBowIsLeadShot(const al::ByamlIter& iter);

int getBowLeadShotNum(InfoData* data, const char* actor);
int getBowLeadShotNum(const al::ByamlIter& iter);

bool getBowIsRapidFire(InfoData* data, const char* actor);
bool getBowIsRapidFire(const al::ByamlIter& iter);

int getBowRapidFireNum(InfoData* data, const char* actor);
int getBowRapidFireNum(const al::ByamlIter& iter);

int getMasterSwordTrueFormAttackPower(InfoData* data, const char* actor);
int getMasterSwordTrueFormAttackPower(const al::ByamlIter& iter);

float getMasterSwordSearchEvilDist(InfoData* data, const char* actor);
float getMasterSwordSearchEvilDist(const al::ByamlIter& iter);

const char* getMasterSwordSleepActorName(InfoData* data, const char* actor);
const char* getMasterSwordSleepActorName(const al::ByamlIter& iter);

const char* getMasterSwordTrueFormActorName(InfoData* data, const char* actor);
const char* getMasterSwordTrueFormActorName(const al::ByamlIter& iter);

const char* getArmorNextRankName(InfoData* data, const char* actor);
const char* getArmorNextRankName(const al::ByamlIter& iter);

int getItemStainColor(InfoData* data, const char* actor);
int getItemStainColor(const al::ByamlIter& iter);

int getCureItemHitPointRecover(InfoData* data, const char* actor);
int getCureItemHitPointRecover(const al::ByamlIter& iter);

int getMonsterShopSellMamo(InfoData* data, const char* actor);
int getMonsterShopSellMamo(const al::ByamlIter& iter);


}  // namespace ksys::act
